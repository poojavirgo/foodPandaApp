{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/fooddelivery/src/components/UI/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport classes from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const emailInputRef = useRef();\n  const addressInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n  useEffect(() => {\n    //console.log(\"register rendered\");\n    if (msg.includes(\"Success\")) {\n      setTimeout(() => {\n        history.push('/login');\n        setMsg('');\n      }, 1000);\n    }\n  }, [msg, history]);\n  const success = {\n    padding: \"10px 15px\",\n    border: \"1px solid green\",\n    color: \"green\"\n  };\n  const fail = {\n    padding: \"10px 15px\",\n    border: \"1px solid red\",\n    color: \"red\"\n  }; // const registerMe=(e)=>{\n  //     e.preventDefault();\n  //     //api post to server\n  //     axios.post('https://my-json-yumito-server.herokuapp.com/users',user)\n  //     .then(res =>{\n  //         setMsg(\"Registered Successfully\");\n  //        //redirect to login page\n  //     })\n  //     .catch((e)=>{\n  //         setMsg(\"Something went wrong. Please try again later!\");\n  //     })\n  // }\n\n  const fetchRequest = async user => {\n    const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBFDRS3qMecD0q0D-7hohPURiooqwJOifU', {\n      method: 'POST',\n      headers: {\n        'Content-type': '/application.json'\n      },\n      body: JSON.stringify({\n        email: user.email,\n        password: user.password,\n        returnSecureToken: true\n      })\n    });\n    if (!response.ok) console.log(response);\n  };\n\n  const onRegisteredHandler = async event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value; // console.log(enteredEmail,enteredPassword,enteredAddress);\n\n    const userData = {\n      email: enteredEmail,\n      password: enteredPassword,\n      address: enteredAddress\n    };\n    console.log(\"userData\", userData);\n\n    try {\n      fetchRequest(userData);\n    } catch (e) {\n      console.error(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `${classes.auth} form1`,\n    onSubmit: onRegisteredHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} form-group`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label m-2 h5\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"mail\",\n            placeholder: \"Email\",\n            className: \"form-control\",\n            ref: emailInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} form-group`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label m-2 h5\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"psd\",\n            placeholder: \"Password\",\n            className: \"form-control\",\n            ref: passwordInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} form-group`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            className: \"form-label m-2 h5\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"addr\",\n            placeholder: \"Address\",\n            className: `${classes.control} form-group`,\n            ref: addressInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary my-3 h4\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h5 text-center\",\n        style: msg === '' ? {} : msg.includes(\"Success\") ? success : fail,\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Already have an account?  |  \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"nrZKMYs0UJhaLlmCMV/3QWcIFuo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default _c2 = /*#__PURE__*/React.memo(Register);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Documents/fooddelivery/src/components/UI/Register.js"],"names":["React","useState","useEffect","useRef","Link","useHistory","classes","Register","msg","setMsg","emailInputRef","addressInputRef","passwordInputRef","history","includes","setTimeout","push","success","padding","border","color","fail","fetchRequest","user","response","fetch","method","headers","body","JSON","stringify","email","password","returnSecureToken","ok","console","log","onRegisteredHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","enteredAddress","userData","address","e","error","message","auth","control","memo"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\nimport {Link} from 'react-router-dom';\nimport {useHistory} from 'react-router-dom';\nimport classes from './Login.module.css';\n\nconst Register=()=> {\n\n    \n    const [msg,setMsg] = useState('');\n    const emailInputRef=useRef();\n    const addressInputRef= useRef();\n    const passwordInputRef= useRef();\n    const history =useHistory();\n\n    useEffect(()=>{\n        //console.log(\"register rendered\");\n         if(msg.includes(\"Success\")){\n            setTimeout(()=>{ history.push('/login');setMsg(''); },1000);            \n         }\n},[msg,history])\n    \n\n    const success ={padding:\"10px 15px\", border:\"1px solid green\", color:\"green\"}\n    const fail ={padding:\"10px 15px\", border:\"1px solid red\", color:\"red\"}\n\n    // const registerMe=(e)=>{\n\n    //     e.preventDefault();\n    //     //api post to server\n    //     axios.post('https://my-json-yumito-server.herokuapp.com/users',user)\n    //     .then(res =>{\n    //         setMsg(\"Registered Successfully\");\n    //        //redirect to login page\n    //     })\n    //     .catch((e)=>{\n    //         setMsg(\"Something went wrong. Please try again later!\");\n    //     })\n    // }\n\n    const fetchRequest= async(user)=>{\n        const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBFDRS3qMecD0q0D-7hohPURiooqwJOifU',{\n            method: 'POST',\n            headers: {\n                'Content-type': '/application.json',\n            },\n            body: JSON.stringify({\n                  email:user.email,\n                  password: user.password,\n                  returnSecureToken:true,\n              })\n          });\n\n           if(!response.ok)\n          console.log(response)\n        \n    }\n\n  const onRegisteredHandler= async (event)=>{\n   event.preventDefault();\n   const enteredEmail = emailInputRef.current.value;\n   const enteredPassword = passwordInputRef.current.value;\n   const enteredAddress = addressInputRef.current.value;\n \n  // console.log(enteredEmail,enteredPassword,enteredAddress);\n   const userData={\n       email: enteredEmail,\n       password: enteredPassword,\n       address: enteredAddress,\n   };\n   console.log(\"userData\",userData);\n   try{\n       fetchRequest(userData);\n   }catch(e){\n       console.error(error.message);\n   }\n  \n}\n    return (\n        <form className={`${classes.auth} form1`} onSubmit={onRegisteredHandler}>\n                    <h2>Create Account</h2><br/>\n                    <div className=\"d-flex flex-column\">\n                    <div className=\"form-group\">\n             <div className={`${classes.control} form-group`}>\n             <label htmlFor=\"email\" className=\"form-label m-2 h5\">Email</label>\n            <input type=\"email\" name=\"mail\" placeholder=\"Email\" className=\"form-control\"  ref={emailInputRef}  required/>\n            </div>\n             <div className={`${classes.control} form-group`}>\n             <label htmlFor=\"password\" className=\"form-label m-2 h5\">Password</label>\n            <input type=\"password\" name=\"psd\" placeholder=\"Password\" className=\"form-control\" ref={passwordInputRef} required/>\n            </div>\n            <div className={`${classes.control} form-group`}>\n            <label htmlFor=\"address\" className=\"form-label m-2 h5\">Address</label>\n             <textarea type=\"text\" name=\"addr\" placeholder=\"Address\" className={`${classes.control} form-group`} ref={addressInputRef} required/>\n            </div>         \n             </div>\n                <button className=\"btn btn-primary my-3 h4\">Sign Up</button>\n                <div className=\"h5 text-center\" style={msg==='' ? {} : (msg.includes(\"Success\") ? success :fail)}>{msg}</div>\n                <hr/>\n                 <span>Already have an account?  |  <Link to=\"/login\">Sign in</Link></span>              \n                 </div>                \n           </form>\n    )\n}\n\nexport default React.memo(Register)"]},"metadata":{},"sourceType":"module"}